!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formInputSelector=t.formInputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inputErrorModifier=t.inputErrorModifier,this._errorModifier=t.errorModifier,this._buttonErrorModifier=t.buttonErrorModifier,this._formElement=n}var n,r;return n=e,(r=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._errorModifier),t.classList.add(this._inputErrorModifier),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._errorModifier),t.classList.remove(this._inputErrorModifier),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInputInvalid",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInputInvalid()?(this._button.classList.add(this._buttonErrorModifier),this._button.disabled=!0):(this._button.classList.remove(this._buttonErrorModifier),this._button.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._formInputSelector)),this._button=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(),r=[{name:"Lembah Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{name:"Danau Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{name:"Pegunungan Gundul",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{name:"Gunung Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{name:"Taman Nasional Vanoise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],o={formInputSelector:".form__input",submitButtonSelector:".btn__submit",inputErrorModifier:"form__input-error",errorModifier:"form__input_type_error",buttonErrorModifier:"btn_inactive"},i=document.querySelector(".profile__username"),u=document.querySelector(".profile__about"),l=document.querySelector(".content"),c=document.querySelector(".main-content"),a=document.querySelector(".btn_edit"),s=document.querySelector(".btn_add"),f=".content";function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==m(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===m(o)?o:String(o)),r)}var o}var p=function(){function e(t,n,r){var o=t.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n.name,this._link=n.link,this._cardSelector=r,this._handleCardClick=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element__item").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".element__image").src=this._link,this._element.querySelector(".element__image").alt=this._name,this._element.querySelector(".element__text").textContent=this._name,this._element}},{key:"_handleHeartButton",value:function(e){e.target.classList.toggle("element__heart-btn_active")}},{key:"_handleDeleteButton",value:function(e){var t=this,n=r.findIndex((function(e){return e.name===t._name}));r.splice(n,1),this._removeEventListeners(),e.target.closest(".element__item").remove()}},{key:"_setEventListeners",value:function(){this._element.querySelector(".element__heart-btn").addEventListener("click",this._handleHeartButton.bind(this)),this._element.querySelector(".element__delete-btn").addEventListener("click",this._handleDeleteButton.bind(this)),this._element.querySelector(".element__image").addEventListener("click",this._handleCardClick.bind(this))}},{key:"_removeEventListeners",value:function(){this._element.querySelector(".element__heart-btn").removeEventListener("click",this._handleHeartButton.bind(this)),this._element.querySelector(".element__delete-btn").removeEventListener("click",this._handleDeleteButton.bind(this)),this._element.querySelector(".element__image").removeEventListener("click",this._handleCardClick.bind(this))}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==d(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}var v=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(){var e=this;Array.isArray(this._renderedItems)?this._renderedItems.forEach((function(t){e._renderer(t)})):this._renderer(this._renderedItems)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(){var e=window.innerWidth-document.documentElement.clientWidth;c.classList.toggle("main-content_disabled"),l.style.overflow="hidden"===l.style.overflow?"auto":"hidden",l.style.width="calc(100% - ".concat(e,"px)")}function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._class=this._popup.replace("#",".").replace("-template",""),this._popupElement=document.querySelector(this._popup).content.querySelector(this._class).cloneNode(!0),this._popupElement}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&document.contains(this._element)&&this.close()}},{key:"_handleClickOutClose",value:function(e){this._element.contains(e.target)||this.close()}},{key:"open",value:function(){var e=this;return this._element=this._getTemplate(),setTimeout((function(){b(),e.setEventListeners(),e._element.classList.toggle("popup")}),100),this._element}},{key:"close",value:function(){b(),this._removeEventListeners(),this._element.remove()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton=this._element.querySelector(".btn__close"),this._handleEscCloseFn=function(t){return e._handleEscClose(t)},this._handleClickOutCloseFn=function(t){return e._handleClickOutClose(t)},this._closeButton.addEventListener("click",(function(){return e.close()})),document.addEventListener("keydown",this._handleEscCloseFn),document.addEventListener("mousedown",this._handleClickOutCloseFn)}},{key:"_removeEventListeners",value:function(){document.removeEventListener("keydown",this._handleEscCloseFn),document.removeEventListener("mousedown",this._handleClickOutCloseFn)}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function k(){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},k.apply(this,arguments)}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._image=e.src,n._text=e.alt,n}return t=u,(n=[{key:"open",value:function(){return k(O(u.prototype),"open",this).call(this),this._element.querySelector(".show-picture__image").src=this._image,this._element.querySelector(".show-picture__image").alt=this._text,this._element.querySelector(".show-picture__text").textContent=this._text,this._element}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n,r=e.handleEventSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._handleEventSubmit=r,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},Array.from(this._element.querySelectorAll(".form__input")).forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;I(T(u.prototype),"setEventListeners",this).call(this),this._element.addEventListener("submit",(function(t){t.preventDefault(),e._handleEventSubmit(e._getInputValues())}))}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==x(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===x(o)?o:String(o)),r)}var o}var M=function(){function e(t){var n=t.userName,r=t.userAbout;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userAbout=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userAbout.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._userName.textContent=t,this._userAbout.textContent=n}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),A=new v({items:r,renderer:function(e){var t=new p({handleCardClick:function(e){var t=new v({items:e.target,renderer:function(e){var n=new P(e,"#show-picture-template").open();t.addItem(n)}},f);t.renderItems()}},e,"#card-template").generateCard();A.addItem(t)}},".element");A.renderItems();var V=new M({userName:i,userAbout:u}),D=new v({items:"#edit-profile-template",renderer:function(e){var t=new B({handleEventSubmit:function(e){V.setUserInfo({name:e.name,about:e.title}),t.close()}},e),r=t.open(),i=V.getUserInfo(),u=r.querySelector('input[name="name"]'),l=r.querySelector('input[name="title"]');new n(o,r).enableValidation(),setTimeout((function(){u.value=i.name,l.value=i.about}),100),D.addItem(r)}},f),N=new v({items:"#add-card-template",renderer:function(e){var t=new B({handleEventSubmit:function(e){var n={name:e.title,link:e.link};r.unshift(n),A.clear(),A.renderItems(),t.close()}},e),i=t.open();new n(o,i).enableValidation(),N.addItem(i)}},f);a.addEventListener("click",(function(){D.renderItems()})),s.addEventListener("click",(function(){N.renderItems()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,